/*
* generated by Xtext
*/
grammar InternalProto;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.chw.game.ide.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.chw.game.ide.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.chw.game.ide.services.ProtoGrammarAccess;

}

@parser::members {
 
 	private ProtoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ProtoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportInfo
entryRuleImportInfo 
:
{ before(grammarAccess.getImportInfoRule()); }
	 ruleImportInfo
{ after(grammarAccess.getImportInfoRule()); } 
	 EOF 
;

// Rule ImportInfo
ruleImportInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportInfoAccess().getGroup()); }
(rule__ImportInfo__Group__0)
{ after(grammarAccess.getImportInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionInfo
entryRuleOptionInfo 
:
{ before(grammarAccess.getOptionInfoRule()); }
	 ruleOptionInfo
{ after(grammarAccess.getOptionInfoRule()); } 
	 EOF 
;

// Rule OptionInfo
ruleOptionInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionInfoAccess().getGroup()); }
(rule__OptionInfo__Group__0)
{ after(grammarAccess.getOptionInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMap
entryRuleMap 
:
{ before(grammarAccess.getMapRule()); }
	 ruleMap
{ after(grammarAccess.getMapRule()); } 
	 EOF 
;

// Rule Map
ruleMap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapAccess().getGroup()); }
(rule__Map__Group__0)
{ after(grammarAccess.getMapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapField
entryRuleMapField 
:
{ before(grammarAccess.getMapFieldRule()); }
	 ruleMapField
{ after(grammarAccess.getMapFieldRule()); } 
	 EOF 
;

// Rule MapField
ruleMapField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapFieldAccess().getGroup()); }
(rule__MapField__Group__0)
{ after(grammarAccess.getMapFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapRef
entryRuleMapRef 
:
{ before(grammarAccess.getMapRefRule()); }
	 ruleMapRef
{ after(grammarAccess.getMapRefRule()); } 
	 EOF 
;

// Rule MapRef
ruleMapRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapRefAccess().getGroup()); }
(rule__MapRef__Group__0)
{ after(grammarAccess.getMapRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageType
entryRuleMessageType 
:
{ before(grammarAccess.getMessageTypeRule()); }
	 ruleMessageType
{ after(grammarAccess.getMessageTypeRule()); } 
	 EOF 
;

// Rule MessageType
ruleMessageType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageTypeAccess().getGroup()); }
(rule__MessageType__Group__0)
{ after(grammarAccess.getMessageTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageField
entryRuleMessageField 
:
{ before(grammarAccess.getMessageFieldRule()); }
	 ruleMessageField
{ after(grammarAccess.getMessageFieldRule()); } 
	 EOF 
;

// Rule MessageField
ruleMessageField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageFieldAccess().getAlternatives()); }
(rule__MessageField__Alternatives)
{ after(grammarAccess.getMessageFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageSimpleField
entryRuleMessageSimpleField 
:
{ before(grammarAccess.getMessageSimpleFieldRule()); }
	 ruleMessageSimpleField
{ after(grammarAccess.getMessageSimpleFieldRule()); } 
	 EOF 
;

// Rule MessageSimpleField
ruleMessageSimpleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getGroup()); }
(rule__MessageSimpleField__Group__0)
{ after(grammarAccess.getMessageSimpleFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageComplexField
entryRuleMessageComplexField 
:
{ before(grammarAccess.getMessageComplexFieldRule()); }
	 ruleMessageComplexField
{ after(grammarAccess.getMessageComplexFieldRule()); } 
	 EOF 
;

// Rule MessageComplexField
ruleMessageComplexField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getGroup()); }
(rule__MessageComplexField__Group__0)
{ after(grammarAccess.getMessageComplexFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageFieldDefault
entryRuleMessageFieldDefault 
:
{ before(grammarAccess.getMessageFieldDefaultRule()); }
	 ruleMessageFieldDefault
{ after(grammarAccess.getMessageFieldDefaultRule()); } 
	 EOF 
;

// Rule MessageFieldDefault
ruleMessageFieldDefault
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getGroup()); }
(rule__MessageFieldDefault__Group__0)
{ after(grammarAccess.getMessageFieldDefaultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumType
entryRuleEnumType 
:
{ before(grammarAccess.getEnumTypeRule()); }
	 ruleEnumType
{ after(grammarAccess.getEnumTypeRule()); } 
	 EOF 
;

// Rule EnumType
ruleEnumType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup()); }
(rule__EnumType__Group__0)
{ after(grammarAccess.getEnumTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumField
entryRuleEnumField 
:
{ before(grammarAccess.getEnumFieldRule()); }
	 ruleEnumField
{ after(grammarAccess.getEnumFieldRule()); } 
	 EOF 
;

// Rule EnumField
ruleEnumField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumFieldAccess().getGroup()); }
(rule__EnumField__Group__0)
{ after(grammarAccess.getEnumFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumFieldOpt
entryRuleEnumFieldOpt 
:
{ before(grammarAccess.getEnumFieldOptRule()); }
	 ruleEnumFieldOpt
{ after(grammarAccess.getEnumFieldOptRule()); } 
	 EOF 
;

// Rule EnumFieldOpt
ruleEnumFieldOpt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumFieldOptAccess().getGroup()); }
(rule__EnumFieldOpt__Group__0)
{ after(grammarAccess.getEnumFieldOptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleENTITY_NAME
entryRuleENTITY_NAME 
:
{ before(grammarAccess.getENTITY_NAMERule()); }
	 ruleENTITY_NAME
{ after(grammarAccess.getENTITY_NAMERule()); } 
	 EOF 
;

// Rule ENTITY_NAME
ruleENTITY_NAME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getENTITY_NAMEAccess().getAlternatives()); }
(rule__ENTITY_NAME__Alternatives)
{ after(grammarAccess.getENTITY_NAMEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment_ALL
entryRuleComment_ALL 
:
{ before(grammarAccess.getComment_ALLRule()); }
	 ruleComment_ALL
{ after(grammarAccess.getComment_ALLRule()); } 
	 EOF 
;

// Rule Comment_ALL
ruleComment_ALL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComment_ALLAccess().getAlternatives()); }
(rule__Comment_ALL__Alternatives)
{ after(grammarAccess.getComment_ALLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_0()); }
(rule__Model__Group_0__0)
{ after(grammarAccess.getModelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getImportsAssignment_1()); }
(rule__Model__ImportsAssignment_1)
{ after(grammarAccess.getModelAccess().getImportsAssignment_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getOptionsAssignment_2()); }
(rule__Model__OptionsAssignment_2)
{ after(grammarAccess.getModelAccess().getOptionsAssignment_2()); }
)

    |(
{ before(grammarAccess.getModelAccess().getElementsAssignment_3()); }
(rule__Model__ElementsAssignment_3)
{ after(grammarAccess.getModelAccess().getElementsAssignment_3()); }
)

    |(
{ before(grammarAccess.getModelAccess().getCommAssignment_4()); }
(rule__Model__CommAssignment_4)
{ after(grammarAccess.getModelAccess().getCommAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getMapParserRuleCall_1()); }
	ruleMap
{ after(grammarAccess.getElementAccess().getMapParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMessageTypeParserRuleCall_0()); }
	ruleMessageType
{ after(grammarAccess.getTypeAccess().getMessageTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEnumTypeParserRuleCall_1()); }
	ruleEnumType
{ after(grammarAccess.getTypeAccess().getEnumTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getCommAssignment_5_0()); }
(rule__Map__CommAssignment_5_0)
{ after(grammarAccess.getMapAccess().getCommAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getMapAccess().getFieldsAssignment_5_1()); }
(rule__Map__FieldsAssignment_5_1)
{ after(grammarAccess.getMapAccess().getFieldsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getCommAssignment_3_0()); }
(rule__MessageType__CommAssignment_3_0)
{ after(grammarAccess.getMessageTypeAccess().getCommAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getMessageTypeAccess().getFieldsAssignment_3_1()); }
(rule__MessageType__FieldsAssignment_3_1)
{ after(grammarAccess.getMessageTypeAccess().getFieldsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getMessageTypeAccess().getTypesAssignment_3_2()); }
(rule__MessageType__TypesAssignment_3_2)
{ after(grammarAccess.getMessageTypeAccess().getTypesAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getMessageSimpleFieldParserRuleCall_0()); }
	ruleMessageSimpleField
{ after(grammarAccess.getMessageFieldAccess().getMessageSimpleFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageFieldAccess().getMessageComplexFieldParserRuleCall_1()); }
	ruleMessageComplexField
{ after(grammarAccess.getMessageFieldAccess().getMessageComplexFieldParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getNUMBERTerminalRuleCall_3_0()); }
	RULE_NUMBER
{ after(grammarAccess.getMessageFieldDefaultAccess().getNUMBERTerminalRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getMessageFieldDefaultAccess().getIDENTITYTerminalRuleCall_3_1()); }
	RULE_IDENTITY
{ after(grammarAccess.getMessageFieldDefaultAccess().getIDENTITYTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getCommAssignment_3_0()); }
(rule__EnumType__CommAssignment_3_0)
{ after(grammarAccess.getEnumTypeAccess().getCommAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getEnumTypeAccess().getFieldsAssignment_3_1()); }
(rule__EnumType__FieldsAssignment_3_1)
{ after(grammarAccess.getEnumTypeAccess().getFieldsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getEnumTypeAccess().getOptionsAssignment_3_2()); }
(rule__EnumType__OptionsAssignment_3_2)
{ after(grammarAccess.getEnumTypeAccess().getOptionsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ENTITY_NAME__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getENTITY_NAMEAccess().getFIELD_ATTRTerminalRuleCall_0()); }
	RULE_FIELD_ATTR
{ after(grammarAccess.getENTITY_NAMEAccess().getFIELD_ATTRTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getFIELD_TYPETerminalRuleCall_1()); }
	RULE_FIELD_TYPE
{ after(grammarAccess.getENTITY_NAMEAccess().getFIELD_TYPETerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getIDENTITYTerminalRuleCall_2()); }
	RULE_IDENTITY
{ after(grammarAccess.getENTITY_NAMEAccess().getIDENTITYTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getPACKAGETerminalRuleCall_3()); }
	RULE_PACKAGE
{ after(grammarAccess.getENTITY_NAMEAccess().getPACKAGETerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getIMPORTTerminalRuleCall_4()); }
	RULE_IMPORT
{ after(grammarAccess.getENTITY_NAMEAccess().getIMPORTTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getOPTIONTerminalRuleCall_5()); }
	RULE_OPTION
{ after(grammarAccess.getENTITY_NAMEAccess().getOPTIONTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getMESSAGETerminalRuleCall_6()); }
	RULE_MESSAGE
{ after(grammarAccess.getENTITY_NAMEAccess().getMESSAGETerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getENUMTerminalRuleCall_7()); }
	RULE_ENUM
{ after(grammarAccess.getENTITY_NAMEAccess().getENUMTerminalRuleCall_7()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getMAP_KINDTerminalRuleCall_8()); }
	RULE_MAP_KIND
{ after(grammarAccess.getENTITY_NAMEAccess().getMAP_KINDTerminalRuleCall_8()); }
)

    |(
{ before(grammarAccess.getENTITY_NAMEAccess().getDEFAULT_KINDTerminalRuleCall_9()); }
	RULE_DEFAULT_KIND
{ after(grammarAccess.getENTITY_NAMEAccess().getDEFAULT_KINDTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment_ALL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComment_ALLAccess().getTextAssignment_0()); }
(rule__Comment_ALL__TextAssignment_0)
{ after(grammarAccess.getComment_ALLAccess().getTextAssignment_0()); }
)

    |(
{ before(grammarAccess.getComment_ALLAccess().getTextAssignment_1()); }
(rule__Comment_ALL__TextAssignment_1)
{ after(grammarAccess.getComment_ALLAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPACKAGETerminalRuleCall_0_0()); }
	RULE_PACKAGE
{ after(grammarAccess.getModelAccess().getPACKAGETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__1__Impl
	rule__Model__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
(rule__Model__NameAssignment_0_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getENDTerminalRuleCall_0_2()); }
(	RULE_END)?
{ after(grammarAccess.getModelAccess().getENDTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInfo__Group__0__Impl
	rule__ImportInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInfoAccess().getIMPORTTerminalRuleCall_0()); }
	RULE_IMPORT
{ after(grammarAccess.getImportInfoAccess().getIMPORTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInfo__Group__1__Impl
	rule__ImportInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInfoAccess().getImportURIAssignment_1()); }
(rule__ImportInfo__ImportURIAssignment_1)
{ after(grammarAccess.getImportInfoAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportInfo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInfoAccess().getENDTerminalRuleCall_2()); }
(	RULE_END)?
{ after(grammarAccess.getImportInfoAccess().getENDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OptionInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionInfo__Group__0__Impl
	rule__OptionInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getOPTIONTerminalRuleCall_0()); }
	RULE_OPTION
{ after(grammarAccess.getOptionInfoAccess().getOPTIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionInfo__Group__1__Impl
	rule__OptionInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getNameAssignment_1()); }
(rule__OptionInfo__NameAssignment_1)
{ after(grammarAccess.getOptionInfoAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionInfo__Group__2__Impl
	rule__OptionInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getEQUALSTerminalRuleCall_2()); }
	RULE_EQUALS
{ after(grammarAccess.getOptionInfoAccess().getEQUALSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionInfo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionInfo__Group__3__Impl
	rule__OptionInfo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getValueAssignment_3()); }
(rule__OptionInfo__ValueAssignment_3)
{ after(grammarAccess.getOptionInfoAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionInfo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionInfo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getENDTerminalRuleCall_4()); }
(	RULE_END)?
{ after(grammarAccess.getOptionInfoAccess().getENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Map__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__0__Impl
	rule__Map__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMAP_KINDTerminalRuleCall_0()); }
	RULE_MAP_KIND
{ after(grammarAccess.getMapAccess().getMAP_KINDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__1__Impl
	rule__Map__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getNameAssignment_1()); }
(rule__Map__NameAssignment_1)
{ after(grammarAccess.getMapAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__2__Impl
	rule__Map__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getFILETER_ATerminalRuleCall_2()); }
	RULE_FILETER_A
{ after(grammarAccess.getMapAccess().getFILETER_ATerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__3__Impl
	rule__Map__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getBindAssignment_3()); }
(rule__Map__BindAssignment_3)
{ after(grammarAccess.getMapAccess().getBindAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__4__Impl
	rule__Map__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getBRACE_LTerminalRuleCall_4()); }
	RULE_BRACE_L
{ after(grammarAccess.getMapAccess().getBRACE_LTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__5__Impl
	rule__Map__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAlternatives_5()); }
(rule__Map__Alternatives_5)*
{ after(grammarAccess.getMapAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__6__Impl
	rule__Map__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getBRACE_RTerminalRuleCall_6()); }
	RULE_BRACE_R
{ after(grammarAccess.getMapAccess().getBRACE_RTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getENDTerminalRuleCall_7()); }
(	RULE_END)?
{ after(grammarAccess.getMapAccess().getENDTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MapField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__0__Impl
	rule__MapField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getAttrAssignment_0()); }
(rule__MapField__AttrAssignment_0)
{ after(grammarAccess.getMapFieldAccess().getAttrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__1__Impl
	rule__MapField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getNameAssignment_1()); }
(rule__MapField__NameAssignment_1)
{ after(grammarAccess.getMapFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__2__Impl
	rule__MapField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getGroup_2()); }
(rule__MapField__Group_2__0)?
{ after(grammarAccess.getMapFieldAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__3__Impl
	rule__MapField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getFILETER_ATerminalRuleCall_3()); }
	RULE_FILETER_A
{ after(grammarAccess.getMapFieldAccess().getFILETER_ATerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__4__Impl
	rule__MapField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getLinksAssignment_4()); }
(rule__MapField__LinksAssignment_4)
{ after(grammarAccess.getMapFieldAccess().getLinksAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getENDTerminalRuleCall_5()); }
(	RULE_END)?
{ after(grammarAccess.getMapFieldAccess().getENDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MapField__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group_2__0__Impl
	rule__MapField__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getFILETER_BTerminalRuleCall_2_0()); }
	RULE_FILETER_B
{ after(grammarAccess.getMapFieldAccess().getFILETER_BTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapField__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapField__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getFilterAssignment_2_1()); }
(rule__MapField__FilterAssignment_2_1)
{ after(grammarAccess.getMapFieldAccess().getFilterAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRef__Group__0__Impl
	rule__MapRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getLinkAssignment_0()); }
(rule__MapRef__LinkAssignment_0)
{ after(grammarAccess.getMapRefAccess().getLinkAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getGroup_1()); }
(rule__MapRef__Group_1__0)?
{ after(grammarAccess.getMapRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRef__Group_1__0__Impl
	rule__MapRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getDOTTerminalRuleCall_1_0()); }
	RULE_DOT
{ after(grammarAccess.getMapRefAccess().getDOTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getChildAssignment_1_1()); }
(rule__MapRef__ChildAssignment_1_1)
{ after(grammarAccess.getMapRefAccess().getChildAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__0__Impl
	rule__MessageType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getMESSAGETerminalRuleCall_0()); }
	RULE_MESSAGE
{ after(grammarAccess.getMessageTypeAccess().getMESSAGETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__1__Impl
	rule__MessageType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getNameAssignment_1()); }
(rule__MessageType__NameAssignment_1)
{ after(grammarAccess.getMessageTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__2__Impl
	rule__MessageType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getBRACE_LTerminalRuleCall_2()); }
	RULE_BRACE_L
{ after(grammarAccess.getMessageTypeAccess().getBRACE_LTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__3__Impl
	rule__MessageType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getAlternatives_3()); }
(rule__MessageType__Alternatives_3)*
{ after(grammarAccess.getMessageTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__4__Impl
	rule__MessageType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getBRACE_RTerminalRuleCall_4()); }
	RULE_BRACE_R
{ after(grammarAccess.getMessageTypeAccess().getBRACE_RTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getENDTerminalRuleCall_5()); }
(	RULE_END)?
{ after(grammarAccess.getMessageTypeAccess().getENDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MessageSimpleField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__0__Impl
	rule__MessageSimpleField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getAttrAssignment_0()); }
(rule__MessageSimpleField__AttrAssignment_0)
{ after(grammarAccess.getMessageSimpleFieldAccess().getAttrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__1__Impl
	rule__MessageSimpleField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getTypeAssignment_1()); }
(rule__MessageSimpleField__TypeAssignment_1)
{ after(grammarAccess.getMessageSimpleFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__2__Impl
	rule__MessageSimpleField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getNameAssignment_2()); }
(rule__MessageSimpleField__NameAssignment_2)
{ after(grammarAccess.getMessageSimpleFieldAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__3__Impl
	rule__MessageSimpleField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getMessageSimpleFieldAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__4__Impl
	rule__MessageSimpleField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getIndexAssignment_4()); }
(rule__MessageSimpleField__IndexAssignment_4)
{ after(grammarAccess.getMessageSimpleFieldAccess().getIndexAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__5__Impl
	rule__MessageSimpleField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getMessageFieldDefaultParserRuleCall_5()); }
(	ruleMessageFieldDefault)?
{ after(grammarAccess.getMessageSimpleFieldAccess().getMessageFieldDefaultParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageSimpleField__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageSimpleField__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getENDTerminalRuleCall_6()); }
(	RULE_END)?
{ after(grammarAccess.getMessageSimpleFieldAccess().getENDTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MessageComplexField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__0__Impl
	rule__MessageComplexField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getAttrAssignment_0()); }
(rule__MessageComplexField__AttrAssignment_0)
{ after(grammarAccess.getMessageComplexFieldAccess().getAttrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__1__Impl
	rule__MessageComplexField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getTypeAssignment_1()); }
(rule__MessageComplexField__TypeAssignment_1)
{ after(grammarAccess.getMessageComplexFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__2__Impl
	rule__MessageComplexField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getNameAssignment_2()); }
(rule__MessageComplexField__NameAssignment_2)
{ after(grammarAccess.getMessageComplexFieldAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__3__Impl
	rule__MessageComplexField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getMessageComplexFieldAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__4__Impl
	rule__MessageComplexField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getIndexAssignment_4()); }
(rule__MessageComplexField__IndexAssignment_4)
{ after(grammarAccess.getMessageComplexFieldAccess().getIndexAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__5__Impl
	rule__MessageComplexField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getMessageFieldDefaultParserRuleCall_5()); }
(	ruleMessageFieldDefault)?
{ after(grammarAccess.getMessageComplexFieldAccess().getMessageFieldDefaultParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageComplexField__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageComplexField__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getENDTerminalRuleCall_6()); }
(	RULE_END)?
{ after(grammarAccess.getMessageComplexFieldAccess().getENDTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MessageFieldDefault__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageFieldDefault__Group__0__Impl
	rule__MessageFieldDefault__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getBRACKET_LTerminalRuleCall_0()); }
	RULE_BRACKET_L
{ after(grammarAccess.getMessageFieldDefaultAccess().getBRACKET_LTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageFieldDefault__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageFieldDefault__Group__1__Impl
	rule__MessageFieldDefault__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getDEFAULT_KINDTerminalRuleCall_1()); }
	RULE_DEFAULT_KIND
{ after(grammarAccess.getMessageFieldDefaultAccess().getDEFAULT_KINDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageFieldDefault__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageFieldDefault__Group__2__Impl
	rule__MessageFieldDefault__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getEQUALSTerminalRuleCall_2()); }
	RULE_EQUALS
{ after(grammarAccess.getMessageFieldDefaultAccess().getEQUALSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageFieldDefault__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageFieldDefault__Group__3__Impl
	rule__MessageFieldDefault__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getAlternatives_3()); }
(rule__MessageFieldDefault__Alternatives_3)
{ after(grammarAccess.getMessageFieldDefaultAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageFieldDefault__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageFieldDefault__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageFieldDefault__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldDefaultAccess().getBRACKET_RTerminalRuleCall_4()); }
	RULE_BRACKET_R
{ after(grammarAccess.getMessageFieldDefaultAccess().getBRACKET_RTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__0__Impl
	rule__EnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getENUMTerminalRuleCall_0()); }
	RULE_ENUM
{ after(grammarAccess.getEnumTypeAccess().getENUMTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__1__Impl
	rule__EnumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getNameAssignment_1()); }
(rule__EnumType__NameAssignment_1)
{ after(grammarAccess.getEnumTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__2__Impl
	rule__EnumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getBRACE_LTerminalRuleCall_2()); }
	RULE_BRACE_L
{ after(grammarAccess.getEnumTypeAccess().getBRACE_LTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__3__Impl
	rule__EnumType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getAlternatives_3()); }
(rule__EnumType__Alternatives_3)*
{ after(grammarAccess.getEnumTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__4__Impl
	rule__EnumType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getBRACE_RTerminalRuleCall_4()); }
	RULE_BRACE_R
{ after(grammarAccess.getEnumTypeAccess().getBRACE_RTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getENDTerminalRuleCall_5()); }
(	RULE_END)?
{ after(grammarAccess.getEnumTypeAccess().getENDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__0__Impl
	rule__EnumField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getNameAssignment_0()); }
(rule__EnumField__NameAssignment_0)
{ after(grammarAccess.getEnumFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__1__Impl
	rule__EnumField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getEQUALSTerminalRuleCall_1()); }
	RULE_EQUALS
{ after(grammarAccess.getEnumFieldAccess().getEQUALSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__2__Impl
	rule__EnumField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getIndexAssignment_2()); }
(rule__EnumField__IndexAssignment_2)
{ after(grammarAccess.getEnumFieldAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getENDTerminalRuleCall_3()); }
(	RULE_END)?
{ after(grammarAccess.getEnumFieldAccess().getENDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumFieldOpt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumFieldOpt__Group__0__Impl
	rule__EnumFieldOpt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getOPTIONTerminalRuleCall_0()); }
	RULE_OPTION
{ after(grammarAccess.getEnumFieldOptAccess().getOPTIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumFieldOpt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumFieldOpt__Group__1__Impl
	rule__EnumFieldOpt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getNameAssignment_1()); }
(rule__EnumFieldOpt__NameAssignment_1)
{ after(grammarAccess.getEnumFieldOptAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumFieldOpt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumFieldOpt__Group__2__Impl
	rule__EnumFieldOpt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getEQUALSTerminalRuleCall_2()); }
	RULE_EQUALS
{ after(grammarAccess.getEnumFieldOptAccess().getEQUALSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumFieldOpt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumFieldOpt__Group__3__Impl
	rule__EnumFieldOpt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getValueAssignment_3()); }
(rule__EnumFieldOpt__ValueAssignment_3)
{ after(grammarAccess.getEnumFieldOptAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumFieldOpt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumFieldOpt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getENDTerminalRuleCall_4()); }
(	RULE_END)?
{ after(grammarAccess.getEnumFieldOptAccess().getENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDENTITYTerminalRuleCall_0()); }
	RULE_IDENTITY
{ after(grammarAccess.getQualifiedNameAccess().getIDENTITYTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getDOTTerminalRuleCall_1_0()); }
	RULE_DOT
{ after(grammarAccess.getQualifiedNameAccess().getDOTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDENTITYTerminalRuleCall_1_1()); }
	RULE_IDENTITY
{ after(grammarAccess.getQualifiedNameAccess().getIDENTITYTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportInfoParserRuleCall_1_0()); }
	ruleImportInfo{ after(grammarAccess.getModelAccess().getImportsImportInfoParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OptionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getOptionsOptionInfoParserRuleCall_2_0()); }
	ruleOptionInfo{ after(grammarAccess.getModelAccess().getOptionsOptionInfoParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsElementParserRuleCall_3_0()); }
	ruleElement{ after(grammarAccess.getModelAccess().getElementsElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CommAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCommComment_ALLParserRuleCall_4_0()); }
	ruleComment_ALL{ after(grammarAccess.getModelAccess().getCommComment_ALLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportInfo__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportInfoAccess().getImportURISL_STRINGTerminalRuleCall_1_0()); }
	RULE_SL_STRING{ after(grammarAccess.getImportInfoAccess().getImportURISL_STRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getOptionInfoAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionInfo__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionInfoAccess().getValueSL_STRINGTerminalRuleCall_3_0()); }
	RULE_SL_STRING{ after(grammarAccess.getOptionInfoAccess().getValueSL_STRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getMapAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__BindAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getBindMessageTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getMapAccess().getBindMessageTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMapAccess().getBindMessageTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMapAccess().getBindMessageTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__CommAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getCommComment_ALLParserRuleCall_5_0_0()); }
	ruleComment_ALL{ after(grammarAccess.getMapAccess().getCommComment_ALLParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__FieldsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getFieldsMapFieldParserRuleCall_5_1_0()); }
	ruleMapField{ after(grammarAccess.getMapAccess().getFieldsMapFieldParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__AttrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
	RULE_FIELD_ATTR{ after(grammarAccess.getMapFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getMapFieldAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__FilterAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getFilterMapCrossReference_2_1_0()); }
(
{ before(grammarAccess.getMapFieldAccess().getFilterMapQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMapFieldAccess().getFilterMapQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getMapFieldAccess().getFilterMapCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapField__LinksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFieldAccess().getLinksMapRefParserRuleCall_4_0()); }
	ruleMapRef{ after(grammarAccess.getMapFieldAccess().getLinksMapRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__LinkAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getLinkMessageFieldCrossReference_0_0()); }
(
{ before(grammarAccess.getMapRefAccess().getLinkMessageFieldIDENTITYTerminalRuleCall_0_0_1()); }
	RULE_IDENTITY{ after(grammarAccess.getMapRefAccess().getLinkMessageFieldIDENTITYTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMapRefAccess().getLinkMessageFieldCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapRef__ChildAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRefAccess().getChildMapRefParserRuleCall_1_1_0()); }
	ruleMapRef{ after(grammarAccess.getMapRefAccess().getChildMapRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getMessageTypeAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__CommAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getCommComment_ALLParserRuleCall_3_0_0()); }
	ruleComment_ALL{ after(grammarAccess.getMessageTypeAccess().getCommComment_ALLParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__FieldsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getFieldsMessageFieldParserRuleCall_3_1_0()); }
	ruleMessageField{ after(grammarAccess.getMessageTypeAccess().getFieldsMessageFieldParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__TypesAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageTypeAccess().getTypesTypeParserRuleCall_3_2_0()); }
	ruleType{ after(grammarAccess.getMessageTypeAccess().getTypesTypeParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__AttrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
	RULE_FIELD_ATTR{ after(grammarAccess.getMessageSimpleFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getTypeFIELD_TYPETerminalRuleCall_1_0()); }
	RULE_FIELD_TYPE{ after(grammarAccess.getMessageSimpleFieldAccess().getTypeFIELD_TYPETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getNameENTITY_NAMEParserRuleCall_2_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getMessageSimpleFieldAccess().getNameENTITY_NAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageSimpleField__IndexAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageSimpleFieldAccess().getIndexNUMBERTerminalRuleCall_4_0()); }
	RULE_NUMBER{ after(grammarAccess.getMessageSimpleFieldAccess().getIndexNUMBERTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__AttrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
	RULE_FIELD_ATTR{ after(grammarAccess.getMessageComplexFieldAccess().getAttrFIELD_ATTRTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getTypeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getMessageComplexFieldAccess().getTypeTypeQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMessageComplexFieldAccess().getTypeTypeQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMessageComplexFieldAccess().getTypeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getNameENTITY_NAMEParserRuleCall_2_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getMessageComplexFieldAccess().getNameENTITY_NAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageComplexField__IndexAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageComplexFieldAccess().getIndexNUMBERTerminalRuleCall_4_0()); }
	RULE_NUMBER{ after(grammarAccess.getMessageComplexFieldAccess().getIndexNUMBERTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getEnumTypeAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__CommAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getCommComment_ALLParserRuleCall_3_0_0()); }
	ruleComment_ALL{ after(grammarAccess.getEnumTypeAccess().getCommComment_ALLParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__FieldsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getFieldsEnumFieldParserRuleCall_3_1_0()); }
	ruleEnumField{ after(grammarAccess.getEnumTypeAccess().getFieldsEnumFieldParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__OptionsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getOptionsEnumFieldOptParserRuleCall_3_2_0()); }
	ruleEnumFieldOpt{ after(grammarAccess.getEnumTypeAccess().getOptionsEnumFieldOptParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getNameENTITY_NAMEParserRuleCall_0_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getEnumFieldAccess().getNameENTITY_NAMEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getIndexNUMBERTerminalRuleCall_2_0()); }
	RULE_NUMBER{ after(grammarAccess.getEnumFieldAccess().getIndexNUMBERTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
	ruleENTITY_NAME{ after(grammarAccess.getEnumFieldOptAccess().getNameENTITY_NAMEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumFieldOpt__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldOptAccess().getValueIDENTITYTerminalRuleCall_3_0()); }
	RULE_IDENTITY{ after(grammarAccess.getEnumFieldOptAccess().getValueIDENTITYTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment_ALL__TextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComment_ALLAccess().getTextCOMMENT_SLTerminalRuleCall_0_0()); }
	RULE_COMMENT_SL{ after(grammarAccess.getComment_ALLAccess().getTextCOMMENT_SLTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment_ALL__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComment_ALLAccess().getTextCOMMENT_MLTerminalRuleCall_1_0()); }
	RULE_COMMENT_ML{ after(grammarAccess.getComment_ALLAccess().getTextCOMMENT_MLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BRACE_L : '{';

RULE_BRACE_R : '}';

RULE_BRACKET_L : '[';

RULE_BRACKET_R : ']';

RULE_EQUALS : '=';

RULE_END : ';';

RULE_DOT : '.';

RULE_FILETER_A : '<=';

RULE_FILETER_B : '<-';

RULE_NUMBER : '-'? ('0'..'9'|'1'..'9' ('0'..'9')+);

RULE_PACKAGE : 'package';

RULE_IMPORT : 'import';

RULE_OPTION : 'option';

RULE_MESSAGE : 'message';

RULE_ENUM : 'enum';

RULE_MAP_KIND : 'map';

RULE_DEFAULT_KIND : 'default';

RULE_FIELD_ATTR : ('optional'|'repeated'|'required');

RULE_FIELD_TYPE : ('int32'|'sint32'|'uint32'|'int64'|'sint64'|'uint64'|'float'|'double'|'string'|'bool'|'bytes');

RULE_IDENTITY : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_COMMENT_ML : '/*' ( options {greedy=false;} : . )*'*/';

RULE_COMMENT_SL : '//' ~(('\n'|'\r'))*;

RULE_SL_STRING : '"' ~(('\n'|'\r'|'"'))* '"';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


