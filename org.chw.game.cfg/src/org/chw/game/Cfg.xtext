grammar org.chw.game.Cfg hidden(WS)//with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate cfg "http://www.chw.org/game/Cfg"


XML2:
	types+=Type*;

Type:
	comm+=COMMENT* input=Input? prefix=C_TYPE name=NAME C_BRACE_L fields+=Field* C_BRACE_R;

Input:
	C_BRACKET_L prefix=C_INPUT C_PAREN_L C_FILE C_EQUALS filePath=STRING (C_COMMA C_NODE C_EQUALS nodePath=STRING)? C_PAREN_R
	C_BRACKET_R;

Field:
	comm+=COMMENT* type=(NativeType | ListType | HashType) fieldName=NAME C_EQUALS nodePath=STRING C_SEMICOLON?;

NativeType:
	type=TypeName;

ListType:
	C_LIST C_ANGLE_L type=TypeName C_ANGLE_R;

HashType:
	C_HASH C_ANGLE_L type=TypeName C_ANGLE_R (C_PAREN_L params+=NAME (C_COMMA params+=NAME)* C_PAREN_R)?;

TypeName:
	C_INPUT | C_FILE | C_NODE | C_TYPE | C_INT | C_UINT | C_BOOL | C_NUMBER | C_STRING | C_LIST | C_HASH | NAME;

terminal C_BRACKET_L:
	'[';

terminal C_BRACKET_R:
	']';

terminal C_PAREN_L:
	'(';

terminal C_PAREN_R:
	')';

terminal C_BRACE_L:
	'{';

terminal C_BRACE_R:
	'}';

terminal C_ANGLE_L:
	'<';

terminal C_ANGLE_R:
	'>';

terminal C_EQUALS:
	'=';

terminal C_COMMA:
	',';

terminal C_SEMICOLON:
	';';

terminal C_INPUT:
	'input';

terminal C_FILE:
	'file';

terminal C_NODE:
	'node';

terminal C_TYPE:
	'type';

terminal C_INT:
	'int';

terminal C_UINT:
	'uint';

terminal C_BOOL:
	'boolean';

terminal C_NUMBER:
	'Number';

terminal C_STRING:
	'String';

terminal C_LIST:
	'List';

terminal C_HASH:
	'Hash';

terminal NAME:
	('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')*;

terminal STRING:
	'"' !('\r' | '\n' | '"')* '"';

terminal COMMENT:
	'/*'->'*/' | '//' !('\r' | '\n')*;

terminal WS:
	(' ' | '\t' | '\r' | '\n')+;
	